# Specifies the version of the Docker Compose file format.
# Version 3 is the most common and recommended version.
version: '3.8'

# 'services' is where you define the different containers that make up your application.
# In this case, we only have one service: our postgres database.
services:
  # 'postgres' is the name of our service. You can name it whatever you like.
  # This name also acts as a hostname within the Docker network if you were to run
  # your Spring Boot app in another container.
  postgres:
    # Specifies the Docker image to use. We're using the official PostgreSQL image,
    # specifically version 13. You can choose a different version if needed.
    image: postgres:13

    # 'environment' sets environment variables inside the container.
    # These are used by the postgres image to initialize the database.
    environment:
      # Sets the database name. This should match the database name in your
      # application.yml file (e.g., bookhub_db).
      POSTGRES_DB: bookhub_db
      # Sets the username for the postgres superuser. This should match 'spring.datasource.username'.
      POSTGRES_USER: postgres
      # Sets the password for the postgres superuser. This should match 'spring.datasource.password'.
      POSTGRES_PASSWORD: password

    # 'ports' maps ports between the host machine and the container.
    # The format is "HOST_PORT:CONTAINER_PORT".
    # This maps port 5432 on your local machine to port 5432 inside the container,
    # allowing your Spring Boot application (running on the host) to connect to it.
    ports:
      - "5432:5432"

    # 'volumes' are used to persist data generated by and used by Docker containers.
    # This line creates a named volume called 'postgres-data' and mounts it to
    # /var/lib/postgresql/data inside the container. This is where PostgreSQL
    # stores its data. By doing this, your data will be saved even if you
    # stop or remove the container.
    volumes:
      - postgres-data:/var/lib/postgresql/data

# This section defines the named volumes used by your services.
# 'external: false' (or omitting it) means Docker Compose will manage this volume.
volumes:
  postgres-data:
