#spring.application.name=api
#
## PostgreSQL Database Configuration
## Replace 'bookhub_db' with your database name
#spring.datasource.url=jdbc:postgresql://localhost:5432/bookhub_db
#
## Replace 'postgres' and 'password' with your PostgreSQL username and password
#spring.datasource.username=postgres
#spring.datasource.password=password
#
## JPA (Java Persistence API) Configuration
## This will show the SQL queries generated by JPA in the console (useful for debugging)
#spring.jpa.show-sql=true
#
## This tells Hibernate (the default JPA implementation) to automatically
## create or update the database schema based on your entities.
## For development, 'update' is fine. For production, you'd use a tool like Flyway or Liquibase.
#spring.jpa.hibernate.ddl-auto=update
#
## Specifies the PostgreSQL dialect for Hibernate
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

  spring:
    application:
      name: api
    datasource:
      url: jdbc:postgresql://localhost:5432/jwt_security
      username: ${PG_USERNAME}
      password: ${PG_PASSWORD}
      driver-class-name: org.postgresql.Driver
    jpa:
      hibernate:
        ddl-auto: create-drop
      show-sql: true
      properties:
        hibernate:
          formate_sql: true
      database: postgresql
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      jwt:
        secret: ${JWT_SECRET_KEY}

